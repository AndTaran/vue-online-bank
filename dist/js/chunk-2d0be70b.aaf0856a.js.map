{"version":3,"sources":["webpack:///./src/views/Auth.vue","webpack:///./src/use/login-form.js","webpack:///./src/views/Auth.vue?eea7"],"names":["for","class","onSubmit","eError","type","id","email","eBlur","pError","password","pBlur","disabled","isSubmitting","isToManyAttempts","useLoginForm","store","useStore","router","useRouter","useForm","handleSubmit","submitCount","useField","yup","trim","required","value","errorMessage","handlerBlur","PASSWORD_MIN_LENGTH","min","computed","watch","val","setTimeout","values","dispatch","push","setup","route","query","message","error","render"],"mappings":"2IAEI,eAAwB,UAApB,mBAAe,G,EAGjB,eAAgC,SAAzBA,IAAI,SAAQ,SAAK,G,YAMxB,eAAoC,SAA7BA,IAAI,YAAW,UAAM,G,mBAYzBC,MAAM,e,gDAtBb,eAyBO,QAzBDA,MAAM,OAAQ,SAAM,8CAAU,EAAAC,UAAA,EAAAA,SAAA,qBAAQ,e,CAC1C,EAEA,eAIM,OAJAD,MAAK,yBAA8B,EAAAE,U,CACvC,E,eACA,eAA+D,SAAxDC,KAAK,QAAQC,GAAG,Q,qDAAiB,EAAAC,MAAK,IAAG,OAAI,8BAAE,EAAAC,OAAA,EAAAA,MAAA,sB,mBAAd,EAAAD,SAC3B,EAAAH,Q,iBAAb,eAAyC,yBAAjB,EAAAA,QAAM,I,0BAGhC,eAIM,OAJAF,MAAK,yBAA8B,EAAAO,U,CACvC,E,eACA,eAAwE,SAAjEJ,KAAK,WAAWC,GAAG,W,qDAAoB,EAAAI,SAAQ,IAAG,OAAI,8BAAE,EAAAC,OAAA,EAAAA,MAAA,sB,mBAAjB,EAAAD,YACjC,EAAAD,Q,iBAAb,eAAyC,yBAAjB,EAAAA,QAAM,I,0BAGhC,eAMS,UALPP,MAAM,cACNG,KAAK,SACJO,SAAU,EAAAC,cAAgB,EAAAC,kBAC5B,UAED,gBAC+B,EAAAA,kB,iBAA/B,eAEM,MAFN,EAAiD,6C,uICjB9C,SAASC,IACd,IAAMC,EAAQC,iBACRC,EAASC,iBAFc,EAIuBC,iBAA5CC,EAJqB,EAIrBA,aAAcR,EAJO,EAIPA,aAAcS,EAJP,EAIOA,YAJP,EAMsCC,eACjE,QACAC,SAEGC,OACAC,SAAS,iBACTnB,MAAM,6BANIA,EANc,EAMrBoB,MAA4BvB,EANP,EAMPwB,aAAmCpB,EAN5B,EAMeqB,YAStCC,EAAsB,EAfC,EAqBzBP,eACF,WACAC,SAEGC,OACAC,SAAS,kBACTK,IACCD,EALJ,sCAMmCA,EANnC,eALOpB,EAlBoB,EAkB3BiB,MACclB,EAnBa,EAmB3BmB,aACajB,EApBc,EAoB3BkB,YAaIf,EAAmBkB,gBAAS,kBAAMV,EAAYK,OAAS,KAE7DM,eAAMnB,GAAkB,SAACoB,GACnBA,GACFC,YAAW,kBAAOb,EAAYK,MAAQ,IAAI,QAI9C,IAAMxB,EAAWkB,EAAY,yDAAC,WAAOe,GAAP,0GAEpBpB,EAAMqB,SAAS,aAAcD,GAFT,OAG1BlB,EAAOoB,KAAK,KAHc,0GAAD,uDAO7B,MAAO,CACL/B,QACAG,WACAN,SACAK,SACAD,QACAG,QACAR,WACAU,eACAC,oB,gBD5BW,GACbyB,MADa,WAEX,IAAMC,EAAQ,iBACRxB,EAAQ,iBAQd,OANIwB,EAAMC,MAAMC,SACd1B,EAAMqB,SAAS,aAAc,CAC3BV,MAAO,OAAAgB,EAAA,MAAMH,EAAMC,MAAMC,SACzBrC,KAAM,YAGV,kBAAYU,OE3ChB,EAAO6B,OAASA,EAED","file":"js/chunk-2d0be70b.aaf0856a.js","sourcesContent":["<template>\r\n  <form class=\"card\" @submit.prevent=\"onSubmit\">\r\n    <h1>Войти в систему</h1>\r\n\r\n    <div :class=\"['form-control', { invalid: eError }]\">\r\n      <label for=\"email\">Email</label>\r\n      <input type=\"email\" id=\"email\" v-model=\"email\" @blur=\"eBlur\" />\r\n      <small v-if=\"eError\">{{ eError }}</small>\r\n    </div>\r\n\r\n    <div :class=\"['form-control', { invalid: pError }]\">\r\n      <label for=\"password\">Пароль</label>\r\n      <input type=\"password\" id=\"password\" v-model=\"password\" @blur=\"pBlur\" />\r\n      <small v-if=\"pError\">{{ pError }}</small>\r\n    </div>\r\n\r\n    <button\r\n      class=\"btn primary\"\r\n      type=\"submit\"\r\n      :disabled=\"isSubmitting || isToManyAttempts\"\r\n    >\r\n      Войти\r\n    </button>\r\n    <div class=\"text-danger\" v-if=\"isToManyAttempts\">\r\n      Частая попытка войти. Попробуйте позже\r\n    </div>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport { useRoute } from \"vue-router\";\r\nimport { useStore } from \"vuex\";\r\nimport { useLoginForm } from \"../use/login-form\";\r\nimport { error } from \"../utils/error\";\r\n\r\nexport default {\r\n  setup() {\r\n    const route = useRoute();\r\n    const store = useStore();\r\n\r\n    if (route.query.message) {\r\n      store.dispatch(\"setMessage\", {\r\n        value: error(route.query.message),\r\n        type: \"warning\",\r\n      });\r\n    }\r\n    return { ...useLoginForm() };\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n","import { computed, watch } from \"vue\";\r\nimport * as yup from \"yup\";\r\nimport { useField, useForm } from \"vee-validate\";\r\nimport { useStore } from \"vuex\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nexport function useLoginForm() {\r\n  const store = useStore();\r\n  const router = useRouter();\r\n\r\n  const { handleSubmit, isSubmitting, submitCount } = useForm();\r\n\r\n  const { value: email, errorMessage: eError, handlerBlur: eBlur } = useField(\r\n    \"email\",\r\n    yup\r\n      .string()\r\n      .trim()\r\n      .required(\"Введите email\")\r\n      .email(\"Введите корректный email\")\r\n  );\r\n\r\n  const PASSWORD_MIN_LENGTH = 6;\r\n\r\n  const {\r\n    value: password,\r\n    errorMessage: pError,\r\n    handlerBlur: pBlur,\r\n  } = useField(\r\n    \"password\",\r\n    yup\r\n      .string()\r\n      .trim()\r\n      .required(\"Введите пароль\")\r\n      .min(\r\n        PASSWORD_MIN_LENGTH,\r\n        `Пароль не может быть меньше ${PASSWORD_MIN_LENGTH} символов`\r\n      )\r\n  );\r\n\r\n  const isToManyAttempts = computed(() => submitCount.value >= 3);\r\n\r\n  watch(isToManyAttempts, (val) => {\r\n    if (val) {\r\n      setTimeout(() => (submitCount.value = 0), 2000);\r\n    }\r\n  });\r\n\r\n  const onSubmit = handleSubmit(async (values) => {\r\n    try {\r\n      await store.dispatch(\"auth/login\", values);\r\n      router.push(\"/\");\r\n    } catch (e) {}\r\n  });\r\n\r\n  return {\r\n    email,\r\n    password,\r\n    eError,\r\n    pError,\r\n    eBlur,\r\n    pBlur,\r\n    onSubmit,\r\n    isSubmitting,\r\n    isToManyAttempts,\r\n  };\r\n}\r\n","import { render } from \"./Auth.vue?vue&type=template&id=07572d08\"\nimport script from \"./Auth.vue?vue&type=script&lang=js\"\nexport * from \"./Auth.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}